{"ast":null,"code":"var _jsxFileName = \"/home/roman/wwwl/30_react/react_kabzda2/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/reducer-dialogs\";\nimport { connect } from \"react-redux\";\nimport { Navigate // == redirect\n} from \"react-router-dom\"; //**** page Dialogs */\n\n/* let DialogsContainer = () => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        const state = store.getState().dialogsReducer;\n\n        const onSendMessageClick = () => {\n          store.dispatch(sendMessageCreator());\n        };\n        const messageAreaOnChange = (newMessageTmp) => {\n          const action = updateNewMessageBodyCreator(newMessageTmp);\n          store.dispatch(action);\n        };\n\n        return (\n          <Dialogs\n            updateNewMessageBodyCreator={messageAreaOnChange}\n            sendMessageCreator={onSendMessageClick}\n            dialogPages={state}\n          />\n        );\n      }}\n    </StoreContext.Consumer>\n  );\n}; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToProps = state => {\n  //console.log(state.auth.isAuth)\n  return {\n    dialogPages: state.dialogsReducer,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessageCreator: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBodyCreator: newMessageTmp => {\n      dispatch(updateNewMessageBodyCreator(newMessageTmp));\n    }\n  };\n}; //rom middleware *** HOC **** Hight object container\n\n\nconst AuthRedirectComponent = props => {\n  if (!props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}; //const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\n/* const DialogsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthRedirectComponent); */\n\n\n_c = AuthRedirectComponent;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirectComponent\");","map":{"version":3,"names":["React","Dialogs","sendMessageCreator","updateNewMessageBodyCreator","connect","Navigate","mapStateToProps","state","dialogPages","dialogsReducer","isAuth","auth","mapDispatchToProps","dispatch","newMessageTmp","AuthRedirectComponent","props","DialogsContainer"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {\n  sendMessageCreator,\n  updateNewMessageBodyCreator,\n} from \"../../redux/reducer-dialogs\";\nimport { connect } from \"react-redux\";\nimport {\n  Navigate, // == redirect\n} from \"react-router-dom\";\n\n//**** page Dialogs */\n\n/* let DialogsContainer = () => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        const state = store.getState().dialogsReducer;\n\n        const onSendMessageClick = () => {\n          store.dispatch(sendMessageCreator());\n        };\n        const messageAreaOnChange = (newMessageTmp) => {\n          const action = updateNewMessageBodyCreator(newMessageTmp);\n          store.dispatch(action);\n        };\n\n        return (\n          <Dialogs\n            updateNewMessageBodyCreator={messageAreaOnChange}\n            sendMessageCreator={onSendMessageClick}\n            dialogPages={state}\n          />\n        );\n      }}\n    </StoreContext.Consumer>\n  );\n}; */\n\nlet mapStateToProps = (state) => {\n  //console.log(state.auth.isAuth)\n  return {\n    dialogPages: state.dialogsReducer,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessageCreator: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBodyCreator: (newMessageTmp) => {\n      dispatch(updateNewMessageBodyCreator(newMessageTmp));\n    },\n  };\n};\n\n//rom middleware *** HOC **** Hight object container\nconst AuthRedirectComponent = (props) => {\n  if (!props.isAuth) {\n    return <Navigate to=\"/login\" replace={true} />;\n  }\n  return <Dialogs {...props} />;\n};\n\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n/* const DialogsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthRedirectComponent); */\nexport default DialogsContainer;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,kBADF,EAEEC,2BAFF,QAGO,6BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,CACY;AADZ,OAEO,kBAFP,C,CAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;EAC/B;EACA,OAAO;IACLC,WAAW,EAAED,KAAK,CAACE,cADd;IAELC,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD;EAFd,CAAP;AAID,CAND;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;EACrC,OAAO;IACLX,kBAAkB,EAAE,MAAM;MACxBW,QAAQ,CAACX,kBAAkB,EAAnB,CAAR;IACD,CAHI;IAILC,2BAA2B,EAAGW,aAAD,IAAmB;MAC9CD,QAAQ,CAACV,2BAA2B,CAACW,aAAD,CAA5B,CAAR;IACD;EANI,CAAP;AAQD,CATD,C,CAWA;;;AACA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EACvC,IAAI,CAACA,KAAK,CAACN,MAAX,EAAmB;IACjB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC,QAAb;MAAsB,OAAO,EAAE;IAA/B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBAAO,QAAC,OAAD,OAAaM;EAAb;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CALD,C,CAOA;AACA;;AACA;AACA;AACA;AACA;;;KAZMD,qB;AAaN,eAAeE,gBAAf"},"metadata":{},"sourceType":"module"}