{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  withCredentials: true,\n  headers: {\n    'API-KEY': '46f80780-8cc7-4980-bf49-abc33bba8e09'\n  }\n});\nexport const userAPI = {\n  getUsers() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    const httpQuery = `users?page=${currentPage}&count=${pageSize}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\n    return instance.get(httpQuery).then(response => response.data);\n  },\n\n  follow(userId) {\n    const httpQuery = `follow/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\n    return instance.post(httpQuery).then(response => response.data);\n  },\n\n  unfollow(userId) {\n    const httpQuery = `follow/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\n    return instance.delete(httpQuery).then(response => response.data);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    const httpQuery = `profile/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\n    return instance.get(httpQuery).then(response => response.data);\n  },\n\n  getStatus(userId) {\n    //add new\n    const httpQuery = `status/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\n    return instance.get(httpQuery).then(response => response.data);\n  },\n\n  updateStatus(status) {\n    //add new\n    const httpQuery = `status}`; //\n\n    return instance.put(httpQuery).then(response => response.data);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    const httpQuery = `auth/me`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n\n    return instance.get(httpQuery).then(response => response.data);\n  }\n\n};","map":{"version":3,"names":["axios","instance","create","baseURL","withCredentials","headers","userAPI","getUsers","currentPage","pageSize","httpQuery","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/api/api.js"],"sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create (\n    {\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        withCredentials: true,\n        headers: {'API-KEY': '46f80780-8cc7-4980-bf49-abc33bba8e09'}\n    }\n);\n\nexport const userAPI = {\n    getUsers (currentPage = 1, pageSize = 10) {\n        const httpQuery = `users?page=${currentPage}&count=${pageSize}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        return instance.get(httpQuery)\n            .then(response => response.data)\n    },  \n    follow(userId) { \n        const httpQuery = `follow/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        return instance.post(httpQuery)\n        .then(response => response.data)\n    },\n    unfollow(userId) { \n        const httpQuery = `follow/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        return instance.delete(httpQuery)\n        .then(response => response.data)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId){\n        const httpQuery = `profile/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        return instance.get(httpQuery)\n        .then(response => response.data)\n    },\n    getStatus(userId){ //add new\n        const httpQuery = `status/${userId}`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        return instance.get(httpQuery)\n        .then(response => response.data)\n    },  \n    updateStatus(status){ //add new\n        const httpQuery = `status}`; //\n        return instance.put(httpQuery)\n        .then(response => response.data)\n    },      \n}\n\nexport const authAPI = {\n    me(){\n        const httpQuery = `auth/me`; //baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n        return instance.get(httpQuery)\n        .then(response => response.data)\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CACb;EACIC,OAAO,EAAE,+CADb;EAEIC,eAAe,EAAE,IAFrB;EAGIC,OAAO,EAAE;IAAC,WAAW;EAAZ;AAHb,CADa,CAAjB;AAQA,OAAO,MAAMC,OAAO,GAAG;EACnBC,QAAQ,GAAkC;IAAA,IAAhCC,WAAgC,uEAAlB,CAAkB;IAAA,IAAfC,QAAe,uEAAJ,EAAI;IACtC,MAAMC,SAAS,GAAI,cAAaF,WAAY,UAASC,QAAS,EAA9D,CADsC,CAC2B;;IACjE,OAAOR,QAAQ,CAACU,GAAT,CAAaD,SAAb,EACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;EAEH,CALkB;;EAMnBC,MAAM,CAACC,MAAD,EAAS;IACX,MAAMN,SAAS,GAAI,UAASM,MAAO,EAAnC,CADW,CAC2B;;IACtC,OAAOf,QAAQ,CAACgB,IAAT,CAAcP,SAAd,EACNE,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;EAEH,CAVkB;;EAWnBI,QAAQ,CAACF,MAAD,EAAS;IACb,MAAMN,SAAS,GAAI,UAASM,MAAO,EAAnC,CADa,CACyB;;IACtC,OAAOf,QAAQ,CAACkB,MAAT,CAAgBT,SAAhB,EACNE,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;EAEH;;AAfkB,CAAhB;AAkBP,OAAO,MAAMM,UAAU,GAAG;EACtBC,UAAU,CAACL,MAAD,EAAQ;IACd,MAAMN,SAAS,GAAI,WAAUM,MAAO,EAApC,CADc,CACyB;;IACvC,OAAOf,QAAQ,CAACU,GAAT,CAAaD,SAAb,EACNE,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;EAEH,CALqB;;EAMtBQ,SAAS,CAACN,MAAD,EAAQ;IAAE;IACf,MAAMN,SAAS,GAAI,UAASM,MAAO,EAAnC,CADa,CACyB;;IACtC,OAAOf,QAAQ,CAACU,GAAT,CAAaD,SAAb,EACNE,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;EAEH,CAVqB;;EAWtBS,YAAY,CAACC,MAAD,EAAQ;IAAE;IAClB,MAAMd,SAAS,GAAI,SAAnB,CADgB,CACa;;IAC7B,OAAOT,QAAQ,CAACwB,GAAT,CAAaf,SAAb,EACNE,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;EAEH;;AAfqB,CAAnB;AAkBP,OAAO,MAAMY,OAAO,GAAG;EACnBC,EAAE,GAAE;IACA,MAAMjB,SAAS,GAAI,SAAnB,CADA,CAC6B;;IAC7B,OAAOT,QAAQ,CAACU,GAAT,CAAaD,SAAb,EACNE,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;EAEH;;AALkB,CAAhB"},"metadata":{},"sourceType":"module"}