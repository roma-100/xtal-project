{"ast":null,"code":"var _jsxFileName = \"/home/roman/wwwl/30_react/react_kabzda2/src/hoc/withAuthRedirect.js\";\nimport React from \"react\";\nimport { Navigate // == redirect\n} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  //console.log('ffff withAuthRedirect RX component: ' + Component.name);\n  class RedirectComponent extends Component {\n    componentDidMount() {//console.log('ffff2 withAuthRedirect RX component: ' + Component.name);\n      //console.log('ffff2 this.props.isAuth RX value: ' + !this.props.isAuth);\n    }\n\n    render() {\n      if (!this.props.isAuth) {\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 24\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }, this);\n    }\n\n  }\n  /*         const mapStateToPropsForRedirect = (state) => ({\n              isAuth: state.auth.isAuth\n          }) */\n\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent); //return RedirectComponent;\n\n  return ConnectedAuthRedirectComponent;\n};","map":{"version":3,"names":["React","Navigate","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","componentDidMount","render","props","ConnectedAuthRedirectComponent"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/hoc/withAuthRedirect.js"],"sourcesContent":["import React from \"react\";\nimport {\n    Navigate, // == redirect\n  } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\nconst mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    //console.log('ffff withAuthRedirect RX component: ' + Component.name);\n    \n    class RedirectComponent extends Component {\n        componentDidMount() {\n            //console.log('ffff2 withAuthRedirect RX component: ' + Component.name);\n            //console.log('ffff2 this.props.isAuth RX value: ' + !this.props.isAuth);\n        }\n        render() {\n            if (!this.props.isAuth) {\n                return <Navigate to=\"/login\" replace={true} />;\n              }\n              return <Component {...this.props} />;\n        }\n    }\n\n/*         const mapStateToPropsForRedirect = (state) => ({\n            isAuth: state.auth.isAuth\n        }) */\n\n        const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n      \n    //return RedirectComponent;\n    return ConnectedAuthRedirectComponent\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,QADJ,CACc;AADd,OAES,kBAFT;AAGA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,0BAA0B,GAAIC,KAAD,KAAY;EAC3CC,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADwB,CAAZ,CAAnC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;EAC3C;EAEA,MAAMC,iBAAN,SAAgCD,SAAhC,CAA0C;IACtCE,iBAAiB,GAAG,CAChB;MACA;IACH;;IACDC,MAAM,GAAG;MACL,IAAI,CAAC,KAAKC,KAAL,CAAWP,MAAhB,EAAwB;QACpB,oBAAO,QAAC,QAAD;UAAU,EAAE,EAAC,QAAb;UAAsB,OAAO,EAAE;QAA/B;UAAA;UAAA;UAAA;QAAA,QAAP;MACD;;MACD,oBAAO,QAAC,SAAD,OAAe,KAAKO;MAApB;QAAA;QAAA;QAAA;MAAA,QAAP;IACL;;EAVqC;EAa9C;AACA;AACA;;;EAEQ,MAAMC,8BAA8B,GAAGX,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAAvC,CApBuC,CAuB3C;;EACA,OAAOI,8BAAP;AACH,CAzBM"},"metadata":{},"sourceType":"module"}