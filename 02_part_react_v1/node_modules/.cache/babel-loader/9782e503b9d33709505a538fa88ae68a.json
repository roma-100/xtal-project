{"ast":null,"code":"var _jsxFileName = \"/home/roman/wwwl/30_react/react_kabzda2/src/components/Header/HeaderContainer.jsx\";\nimport React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { setAuthUserData, getAuthUserDataThunk } from \"../../redux/reducer-auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n    /*     const httpQuery = `https://social-network.samuraijs.com/api/1.0/auth/me`;\n        axios\n          .get(httpQuery, {\n            withCredentials: true,\n          }) */\n\n    /*       authAPI.me()\n          .then((data) => {\n            console.log(\"response.data.resultCode: \" + data.resultCode);\n            if (data.resultCode === 0) {\n              //declare nev variables\n              const { id, login, email } = data.data;\n              this.props.setAuthUserData(id, login, email);\n              //debugger\n            }\n    \n            //debugger\n          }); */\n    this.props.getAuthUserDataThunk();\n    /* \n        console.log('log: DidMount ProfileContainer')\n    const httpQuery = `https://social-network.samuraijs.com/api/1.0/auth/me`;\n    axios.get(httpQuery).then((response) => {\n      //debugger\n      this.props.setUserProfile(response.data);\n      console.log('log response.data : ' + response.data.aboutMe)\n    */\n  }\n\n  render() {\n    //debugger\n    return /*#__PURE__*/_jsxDEV(Header, { ...this.props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n} // Let's make 2 wrap connect\n\n/* const authDialogsContainerBurger = withAuthRedirect(DialogsContainer)\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\nconst authDialogsContainer = connect(mapStateToPropsForRedirect)(authDialogsContainerBurger) */\n\n\nconst AuthRedirectComponentBurger = withAuthRedirect(ProfileContainer);\n_c = AuthRedirectComponentBurger;\n\nconst mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nconst mapStateToProps = state => ({\n  login: state.auth.login\n});\n\nconst mapDispatchToProps = {\n  setAuthUserData,\n  getAuthUserDataThunk\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRedirectComponentBurger\");","map":{"version":3,"names":["React","Header","connect","setAuthUserData","getAuthUserDataThunk","HeaderContainer","Component","componentDidMount","props","render","AuthRedirectComponentBurger","withAuthRedirect","ProfileContainer","mapStateToPropsForRedirect","state","isAuth","auth","mapStateToProps","login","mapDispatchToProps"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/components/Header/HeaderContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { setAuthUserData, getAuthUserDataThunk } from \"../../redux/reducer-auth\";\nclass HeaderContainer extends React.Component {\n  componentDidMount() {\n/*     const httpQuery = `https://social-network.samuraijs.com/api/1.0/auth/me`;\n    axios\n      .get(httpQuery, {\n        withCredentials: true,\n      }) */\n/*       authAPI.me()\n      .then((data) => {\n        console.log(\"response.data.resultCode: \" + data.resultCode);\n        if (data.resultCode === 0) {\n          //declare nev variables\n          const { id, login, email } = data.data;\n          this.props.setAuthUserData(id, login, email);\n          //debugger\n        }\n\n        //debugger\n      }); */\n      this.props.getAuthUserDataThunk()\n\n    /* \n        console.log('log: DidMount ProfileContainer')\n    const httpQuery = `https://social-network.samuraijs.com/api/1.0/auth/me`;\n    axios.get(httpQuery).then((response) => {\n      //debugger\n      this.props.setUserProfile(response.data);\n      console.log('log response.data : ' + response.data.aboutMe)\n    */\n  }\n\n  render() {\n    //debugger\n    return <Header {...this.props} />;\n  }\n}\n// Let's make 2 wrap connect\n/* const authDialogsContainerBurger = withAuthRedirect(DialogsContainer)\nconst mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth\n  }\n}\nconst authDialogsContainer = connect(mapStateToPropsForRedirect)(authDialogsContainerBurger) */\nconst AuthRedirectComponentBurger = withAuthRedirect(ProfileContainer)\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth\n});\n\nconst mapStateToProps = (state) => ({\n  login: state.auth.login\n});\nconst mapDispatchToProps = {\n  setAuthUserData,\n  getAuthUserDataThunk\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,oBAA1B,QAAsD,0BAAtD;;;AACA,MAAMC,eAAN,SAA8BL,KAAK,CAACM,SAApC,CAA8C;EAC5CC,iBAAiB,GAAG;IACtB;AACA;AACA;AACA;AACA;;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACM,KAAKC,KAAL,CAAWJ,oBAAX;IAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACG;;EAEDK,MAAM,GAAG;IACP;IACA,oBAAO,QAAC,MAAD,OAAY,KAAKD;IAAjB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;AAlC2C,C,CAoC9C;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAME,2BAA2B,GAAGC,gBAAgB,CAACC,gBAAD,CAApD;KAAMF,2B;;AACN,MAAMG,0BAA0B,GAAIC,KAAD,KAAY;EAC7CC,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AAD0B,CAAZ,CAAnC;;AAIA,MAAME,eAAe,GAAIH,KAAD,KAAY;EAClCI,KAAK,EAAEJ,KAAK,CAACE,IAAN,CAAWE;AADgB,CAAZ,CAAxB;;AAGA,MAAMC,kBAAkB,GAAG;EACzBhB,eADyB;EAEzBC;AAFyB,CAA3B;AAKA,eAAeF,OAAO,CAACe,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,eAA7C,CAAf"},"metadata":{},"sourceType":"module"}