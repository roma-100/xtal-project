{"ast":null,"code":"//import { renderEntireTree } from '../index'\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\nconst SEND_MESSAGE = 'SEND-MESSAGE';\nconst store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"This is my first post.\",\n        likesCount: 12\n      }, {\n        id: 1,\n        message: \"Second post. Hello everybody\",\n        likesCount: 11\n      }],\n      newPostText: \"it-kamasutra\"\n    },\n    dialogsPage: {\n      dialogs: [{\n        id: 1,\n        name: \"Josefina\"\n      }, {\n        id: 2,\n        name: \"Dima\"\n      }, {\n        id: 3,\n        name: \"Roman\"\n      }, {\n        id: 4,\n        name: \"Greg\"\n      }, {\n        id: 5,\n        name: \"Nadya\"\n      }, {\n        id: 6,\n        name: \"Masha\"\n      }],\n      messages: [{\n        id: 1,\n        message: \"Hi !\"\n      }, {\n        id: 2,\n        message: \"How are you?\"\n      }, {\n        id: 3,\n        message: \"Sheat happens\"\n      }],\n      newMessageBody: ''\n    }\n  },\n\n  _callSubscriber() {\n    console.log(\"State has changed\");\n  },\n\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n\n  getState() {\n    return this._state;\n  },\n\n  dispatch(action) {\n    //{ type: 'ADD-POST' }\n    //debugger\n    //********* POST: ADD_POST ********/\n    if (action.type === ADD_POST) {\n      const newPost = {\n        id: 3,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0\n      };\n\n      this._state.profilePage.posts.push(newPost);\n\n      this._state.profilePage.newPostText = \"\";\n\n      this._callSubscriber(this._state);\n\n      return 1;\n    } //*********POST: UPDATE_NEW_POST_TEXT ********/\n\n\n    if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n\n      this._callSubscriber(this._state);\n\n      return 1;\n    } //*********MESSAGE: UPDATE_NEW_MESSAGE_BODY ********/\n\n\n    if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      console.log(action.messageBody);\n      this._state.dialogsPage.newMessageBody = action.messageBody;\n\n      this._callSubscriber(this._state);\n\n      return 1;\n    } //*********MESSAGE: SEND_MESSAGE ********/\n\n\n    if (action.type === SEND_MESSAGE) {\n      const messageBody = this._state.dialogsPage.newMessageBody;\n\n      this._state.dialogsPage.messages.push({\n        id: 5,\n        message: messageBody\n      });\n      /* ************* messages: [\n        { id: 1, message: \"Hi !\" }, */\n\n\n      this._callSubscriber(this._state);\n\n      return 1;\n    }\n\n    return 0;\n  }\n\n};\nwindow.store = store; //export { addPost, updateNewPostText, subscribe };\n\nconst addPostActionCreator = () => ({\n  type: ADD_POST\n});\n\nconst updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\n\nconst sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\n\nconst updateNewMessageBodyCreator = msgBody => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  messageBody: msgBody\n});\n\nexport { addPostActionCreator, updateNewPostTextActionCreator, sendMessageCreator, updateNewMessageBodyCreator };\nexport default store;","map":{"version":3,"names":["ADD_POST","UPDATE_NEW_POST_TEXT","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","store","_state","profilePage","posts","id","message","likesCount","newPostText","dialogsPage","dialogs","name","messages","newMessageBody","_callSubscriber","console","log","subscribe","observer","getState","dispatch","action","type","newPost","push","newText","messageBody","window","addPostActionCreator","updateNewPostTextActionCreator","text","sendMessageCreator","updateNewMessageBodyCreator","msgBody"],"sources":["/home/roman/wwwl/85_react/react_kabzda2/src/redux/state.js"],"sourcesContent":["//import { renderEntireTree } from '../index'\nconst ADD_POST = 'ADD-POST'\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'\n\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\nconst SEND_MESSAGE = 'SEND-MESSAGE'\n\nconst store = {\n  _state: {\n    profilePage: {\n      posts: [\n        { id: 1, message: \"This is my first post.\", likesCount: 12 },\n        { id: 1, message: \"Second post. Hello everybody\", likesCount: 11 },\n      ],\n      newPostText: \"it-kamasutra\",\n    },\n    dialogsPage: {\n      dialogs: [\n        { id: 1, name: \"Josefina\" },\n        { id: 2, name: \"Dima\" },\n        { id: 3, name: \"Roman\" },\n        { id: 4, name: \"Greg\" },\n        { id: 5, name: \"Nadya\" },\n        { id: 6, name: \"Masha\" },\n      ],\n      messages: [\n        { id: 1, message: \"Hi !\" },\n        { id: 2, message: \"How are you?\" },\n        { id: 3, message: \"Sheat happens\" },\n      ],\n      newMessageBody: ''\n    },\n  },\n  _callSubscriber() {\n    console.log(\"State has changed\");\n  },\n  subscribe(observer) {\n    this._callSubscriber = observer;\n  },\n  getState() {\n    return this._state;\n  },\n\n  dispatch(action) { //{ type: 'ADD-POST' }\n    //debugger\n    //********* POST: ADD_POST ********/\n    if (action.type === ADD_POST) {\n      const newPost = {\n        id: 3,\n        message: this._state.profilePage.newPostText,\n        likesCount: 0,\n      };\n  \n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.newPostText = \"\";\n      this._callSubscriber(this._state);\n      return 1;\n    }\n    //*********POST: UPDATE_NEW_POST_TEXT ********/\n    if (action.type === UPDATE_NEW_POST_TEXT) {\n      this._state.profilePage.newPostText = action.newText;\n      this._callSubscriber(this._state);\n      return 1;\n    }\n    //*********MESSAGE: UPDATE_NEW_MESSAGE_BODY ********/\n    if (action.type === UPDATE_NEW_MESSAGE_BODY) {\n      console.log(action.messageBody)\n      this._state.dialogsPage.newMessageBody = action.messageBody;\n      this._callSubscriber(this._state);\n      return 1;\n    }\n    //*********MESSAGE: SEND_MESSAGE ********/\n    if (action.type === SEND_MESSAGE) {\n      const messageBody = this._state.dialogsPage.newMessageBody\n      this._state.dialogsPage.messages.push({ id: 5, message: messageBody })\n      /* ************* messages: [\n        { id: 1, message: \"Hi !\" }, */\n      this._callSubscriber(this._state);\n      return 1;\n    }\n    return 0;\n  },\n};\n\n\nwindow.store = store\n\n//export { addPost, updateNewPostText, subscribe };\nconst addPostActionCreator = () => ({type: ADD_POST});\n\nconst updateNewPostTextActionCreator = text => (\n  {\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text\n  }\n);\n\nconst sendMessageCreator = () => ({type: SEND_MESSAGE});\n\nconst updateNewMessageBodyCreator = msgBody => (\n  {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    messageBody: msgBody\n  }\n);\n\n\nexport { \n  addPostActionCreator, \n  updateNewPostTextActionCreator,\n  sendMessageCreator,\n  updateNewMessageBodyCreator\n };\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}