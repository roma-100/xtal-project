{"ast":null,"code":"var _jsxFileName = \"/home/roman/wwwl/085_react/react_kabzda2/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, setIsFetching } from '../../redux/reducer-users'; //{followAC, unfollowAC, setUsersAC} //reducer-users\n\nimport { connect } from 'react-redux';\nimport * as axios from \"axios\";\nimport Users from './Users';\nimport Preloader from '../../components/commonBlocks/Preloader/Preloader'; //***** Start insert UsersAPIComponent */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.firstCall = true;\n\n    this.initUsers = () => {\n      this.props.setIsFetchingAC(true);\n      const httpQuery = `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`;\n      axios.get(httpQuery).then(response => {\n        const extractData = response.data.items; //debugger\n\n        this.props.setIsFetchingAC(false);\n        this.props.setUsers(extractData);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n      this.props.setUsers([]); //debugger\n    };\n\n    this.showInitButton = () => {\n      if (this.props.users.length === 0) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.initUsers,\n          children: \"initData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }, this);\n      }\n\n      return null;\n    };\n\n    this.onPageChanged = pageNumber => {\n      //debugger\n      this.props.setIsFetchingAC(true);\n      this.props.setCurrentPage(pageNumber);\n      const httpQuery = `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`;\n      axios.get(httpQuery).then(response => {\n        const extractData = response.data.items;\n        this.props.setIsFetchingAC(false);\n        this.props.setUsers(extractData);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount firstCall: \" + this.firstCall);\n\n    if (this.firstCall) {\n      this.initUsers();\n    }\n\n    this.firstCall = false;\n    /* this.props.setIsFetchingAC (false) */\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching && /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onPageChanged: this.onPageChanged,\n        currentPage: this.props.currentPage,\n        pageSize: this.props.pageSize,\n        totalUsersCount: this.props.totalUsersCount\n        /* isFetching={this.props.isFetching} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n} //***** End insert UsersAPIComponent */\n// Возвращаем только те данные, которые нужны ребенку\n\n\nconst mapStateToProps = state => {\n  //console.log('hello!')\n  //debugger\n  return {\n    users: state.usersPage.users,\n    //usersPage: usersReducer //property is diferent because\n    pageSize: state.usersPage.pageSize,\n    //limit users\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; //Создаем dispatch\n\n/* const mapDispatchToProps = (dispatch) => {  \n  return { //props.follow(userID), props.unfollow(userID)... <- от д/очернего объекта\n    //перечень данных, которые поступают в результате событий от ребенка\n    follow: userID => {dispatch(followAC(userID))}, //будет props.follow обр связь с Users.jsx\n    unfollow: userID => {dispatch(unfollowAC(userID))},\n    setUsers: users => {dispatch(setUsersAC(users))},\n    setCurrentPage: pageNumber => {dispatch(setCurrentPageAC(pageNumber))},\n    setTotalUsersCount: totalCount => {dispatch(setTotalUsersCountAC(totalCount))},\n    setIsFetchingAC: isFetching => {dispatch(setIsFetchingAC(isFetching))}\n  }\n} */\n\n\nconst mapDispatchToProps = {\n  //props.follow(userID), props.unfollow(userID)... <- от д/очернего объекта\n  //перечень данных, которые поступают в результате событий от ребенка\n  follow,\n  //будет props.follow обр связь с Users.jsx\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  setIsFetchingAC\n};\n/* const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersContainer); */\n//debugger\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n/* import React from \"react\";\n\nconst Users = (props) => {\n    return (\n        <div>\n            USERDDDDD\n        </div>\n    )\n}\n\nexport default Users */","map":{"version":3,"names":["React","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","setIsFetching","connect","axios","Users","Preloader","UsersContainer","Component","constructor","props","firstCall","initUsers","setIsFetchingAC","httpQuery","currentPage","pageSize","get","then","response","extractData","data","items","totalCount","showInitButton","users","length","onPageChanged","pageNumber","componentDidMount","console","log","render","isFetching","totalUsersCount","mapStateToProps","state","usersPage","mapDispatchToProps"],"sources":["/home/roman/wwwl/085_react/react_kabzda2/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { follow, \n         unfollow, \n         setUsers, \n         setCurrentPage,\n         setTotalUsersCount,\n         setIsFetching } from '../../redux/reducer-users'\n//{followAC, unfollowAC, setUsersAC} //reducer-users\nimport { connect } from 'react-redux'\nimport * as axios from \"axios\";\nimport Users from './Users';\nimport Preloader from '../../components/commonBlocks/Preloader/Preloader'\n\n//***** Start insert UsersAPIComponent */\n \n\n\nclass UsersContainer extends React.Component {\n  firstCall = true;\n  constructor(props) {\n    super(props);\n  }\n\n  initUsers = () => {\n    this.props.setIsFetchingAC (true)\n    const httpQuery = `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`;\n    axios.get(httpQuery).then((response) => {\n      const extractData = response.data.items;\n      //debugger\n      this.props.setIsFetchingAC (false)\n      this.props.setUsers(extractData);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n    this.props.setUsers([]);\n    //debugger\n    \n  };\n  showInitButton = () => {\n    if (this.props.users.length === 0) {\n      \n      return <button onClick={this.initUsers}>initData</button>;\n    }\n    return null;\n  };\n\n  onPageChanged = (pageNumber) => {\n    //debugger\n    this.props.setIsFetchingAC (true)\n    this.props.setCurrentPage(pageNumber);\n    const httpQuery = `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`;\n    axios.get(httpQuery).then((response) => {\n      const extractData = response.data.items;\n      this.props.setIsFetchingAC (false)\n      this.props.setUsers(extractData);\n    });\n  };\n\n  componentDidMount() {\n    \n    \n    console.log(\"componentDidMount firstCall: \" + this.firstCall);\n    if (this.firstCall) {\n      this.initUsers();\n    }\n    this.firstCall = false;\n\n    /* this.props.setIsFetchingAC (false) */\n  }\n  render() {\n    return (\n      <>\n        { this.props.isFetching && <Preloader /> }\n        {/* <div className=\"\">{this.showInitButton()}</div> */}\n\n        <Users\n          users={this.props.users}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n          onPageChanged={this.onPageChanged}\n          currentPage={this.props.currentPage}\n          pageSize={this.props.pageSize}\n          totalUsersCount = {this.props.totalUsersCount}\n          /* isFetching={this.props.isFetching} */\n        />\n        \n      </>\n    );\n  }\n}\n//***** End insert UsersAPIComponent */\n\n// Возвращаем только те данные, которые нужны ребенку\nconst mapStateToProps = (state) => {\n  //console.log('hello!')\n  //debugger\n  return {\n    users: state.usersPage.users, //usersPage: usersReducer //property is diferent because\n    pageSize: state.usersPage.pageSize, //limit users\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  }\n}\n//Создаем dispatch\n/* const mapDispatchToProps = (dispatch) => {  \n  return { //props.follow(userID), props.unfollow(userID)... <- от д/очернего объекта\n    //перечень данных, которые поступают в результате событий от ребенка\n    follow: userID => {dispatch(followAC(userID))}, //будет props.follow обр связь с Users.jsx\n    unfollow: userID => {dispatch(unfollowAC(userID))},\n    setUsers: users => {dispatch(setUsersAC(users))},\n    setCurrentPage: pageNumber => {dispatch(setCurrentPageAC(pageNumber))},\n    setTotalUsersCount: totalCount => {dispatch(setTotalUsersCountAC(totalCount))},\n    setIsFetchingAC: isFetching => {dispatch(setIsFetchingAC(isFetching))}\n  }\n} */\nconst mapDispatchToProps = {  \n   //props.follow(userID), props.unfollow(userID)... <- от д/очернего объекта\n    //перечень данных, которые поступают в результате событий от ребенка\n    follow, //будет props.follow обр связь с Users.jsx\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    setIsFetchingAC\n\n}\n\n\n\n/* const UsersContainer = connect(mapStateToProps, mapDispatchToProps)(UsersContainer); */\n//debugger\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);\n\n/* import React from \"react\";\n\nconst Users = (props) => {\n    return (\n        <div>\n            USERDDDDD\n        </div>\n    )\n}\n\nexport default Users */"],"mappings":"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"},"metadata":{},"sourceType":"module"}