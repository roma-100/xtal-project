{"ast":null,"code":"const FOLLOW = 'FOLLOW',\n      UNFOLLOW = 'UNFOLLOW',\n      SET_USERS = 'SET_USERS';\nconst initialState = {\n  users: [{\n    id: 1,\n    followed: false,\n    fullname: \"Dmitry\",\n    status: \"hello it's my status\",\n    location: {\n      city: \"Minsk\",\n      country: \"Belarus\"\n    }\n  }, {\n    id: 2,\n    followed: true,\n    fullname: \"Roman\",\n    status: \"Roman everywhere\",\n    location: {\n      city: \"Omsk\",\n      country: \"Russia\"\n    }\n  }, {\n    id: 3,\n    followed: false,\n    fullname: \"Ilon Musk\",\n    status: \"Follow me to the Mars\",\n    location: {\n      city: \"NY\",\n      country: \"USA\"\n    }\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === FOLLOW) {\n    const stateCopy = { ...state,\n      users: state.users.map( //возвр новый объект\n      user => {\n        return user.id === action.id ? { ...user,\n          followed: true\n        } : user;\n      })\n    };\n    return stateCopy;\n  }\n\n  if (action.type === UNFOLLOW) {\n    const stateCopy = { ...state,\n      users: state.users.map( //возвр новый объект\n      user => {\n        return user.id === action.id ? { ...user,\n          followed: false\n        } : user;\n      })\n    };\n    return stateCopy;\n  }\n\n  if (action.type === SET_USERS) {\n    const stateCopy = { ...state,\n      users: [...state.users, ...action.users]\n    };\n    return stateCopy;\n  }\n\n  return state;\n};\n\nconst followAC = userID => ({\n  type: FOLLOW,\n  userID\n});\n\nconst unfollowAC = userID => ({\n  type: UNFOLLOW,\n  userID\n});\n\nconst setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\n\nexport { followAC, unfollowAC, setUsersAC };\nexport default usersReducer;","map":{"version":3,"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","followed","fullname","status","location","city","country","usersReducer","state","action","type","stateCopy","map","user","followAC","userID","unfollowAC","setUsersAC"],"sources":["/home/roman/wwwl/85_react/react_kabzda2/src/redux/reducer-users.js"],"sourcesContent":["const FOLLOW = 'FOLLOW', UNFOLLOW = 'UNFOLLOW', SET_USERS = 'SET_USERS';\n\nconst initialState = {\n  users: [\n    {\n      id: 1,\n      \n      followed: false,\n      fullname: \"Dmitry\",\n      status: \"hello it's my status\",\n      location: { city: \"Minsk\", country: \"Belarus\" },\n    },\n    {\n      id: 2,\n      followed: true,\n      fullname: \"Roman\",\n      status: \"Roman everywhere\",\n      location: { city: \"Omsk\", country: \"Russia\" },\n    },\n    {\n      id: 3,\n      followed: false,\n      fullname: \"Ilon Musk\",\n      status: \"Follow me to the Mars\",\n      location: { city: \"NY\", country: \"USA\" },\n    },\n  ]\n};\n\nconst usersReducer = (state=initialState, action) => {\n    if (action.type === FOLLOW) {\n        const stateCopy = { \n            ...state, \n            users: state.users.map ( //возвр новый объект\n                user => { \n                  return (user.id === action.id) ? {...user,followed: true} : user;\n                }\n            )\n        }\n        return stateCopy\n    }\n    if (action.type === UNFOLLOW) {\n        const stateCopy = { \n            ...state, \n            users: state.users.map ( //возвр новый объект\n                user => { \n                    return (user.id === action.id) ? {...user,followed: false} : user;\n                }\n            )\n        }\n        return stateCopy\n    }\n    if (action.type === SET_USERS) {\n        const stateCopy = { \n            ...state, users: [...state.users, ...action.users]\n        }\n        return stateCopy\n    }\n    \n    return state\n}\n\nconst followAC = (userID) => ({ type: FOLLOW, userID});\nconst unfollowAC = (userID) => ({ type: UNFOLLOW, userID});\nconst setUsersAC = users => ({ type: SET_USERS, users});\n\nexport {followAC, unfollowAC, setUsersAC}\nexport default usersReducer"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AAAA,MAAyBC,QAAQ,GAAG,UAApC;AAAA,MAAgDC,SAAS,GAAG,WAA5D;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,CADN;IAGEC,QAAQ,EAAE,KAHZ;IAIEC,QAAQ,EAAE,QAJZ;IAKEC,MAAM,EAAE,sBALV;IAMEC,QAAQ,EAAE;MAAEC,IAAI,EAAE,OAAR;MAAiBC,OAAO,EAAE;IAA1B;EANZ,CADK,EASL;IACEN,EAAE,EAAE,CADN;IAEEC,QAAQ,EAAE,IAFZ;IAGEC,QAAQ,EAAE,OAHZ;IAIEC,MAAM,EAAE,kBAJV;IAKEC,QAAQ,EAAE;MAAEC,IAAI,EAAE,MAAR;MAAgBC,OAAO,EAAE;IAAzB;EALZ,CATK,EAgBL;IACEN,EAAE,EAAE,CADN;IAEEC,QAAQ,EAAE,KAFZ;IAGEC,QAAQ,EAAE,WAHZ;IAIEC,MAAM,EAAE,uBAJV;IAKEC,QAAQ,EAAE;MAAEC,IAAI,EAAE,IAAR;MAAcC,OAAO,EAAE;IAAvB;EALZ,CAhBK;AADY,CAArB;;AA2BA,MAAMC,YAAY,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBV,YAAyB;EAAA,IAAXW,MAAW;;EACjD,IAAIA,MAAM,CAACC,IAAP,KAAgBf,MAApB,EAA4B;IACxB,MAAMgB,SAAS,GAAG,EACd,GAAGH,KADW;MAEdT,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYa,GAAZ,EAAkB;MACrBC,IAAI,IAAI;QACN,OAAQA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAApB,GAA0B,EAAC,GAAGa,IAAJ;UAASZ,QAAQ,EAAE;QAAnB,CAA1B,GAAqDY,IAA5D;MACD,CAHE;IAFO,CAAlB;IAQA,OAAOF,SAAP;EACH;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgBd,QAApB,EAA8B;IAC1B,MAAMe,SAAS,GAAG,EACd,GAAGH,KADW;MAEdT,KAAK,EAAES,KAAK,CAACT,KAAN,CAAYa,GAAZ,EAAkB;MACrBC,IAAI,IAAI;QACJ,OAAQA,IAAI,CAACb,EAAL,KAAYS,MAAM,CAACT,EAApB,GAA0B,EAAC,GAAGa,IAAJ;UAASZ,QAAQ,EAAE;QAAnB,CAA1B,GAAsDY,IAA7D;MACH,CAHE;IAFO,CAAlB;IAQA,OAAOF,SAAP;EACH;;EACD,IAAIF,MAAM,CAACC,IAAP,KAAgBb,SAApB,EAA+B;IAC3B,MAAMc,SAAS,GAAG,EACd,GAAGH,KADW;MACJT,KAAK,EAAE,CAAC,GAAGS,KAAK,CAACT,KAAV,EAAiB,GAAGU,MAAM,CAACV,KAA3B;IADH,CAAlB;IAGA,OAAOY,SAAP;EACH;;EAED,OAAOH,KAAP;AACH,CA/BD;;AAiCA,MAAMM,QAAQ,GAAIC,MAAD,KAAa;EAAEL,IAAI,EAAEf,MAAR;EAAgBoB;AAAhB,CAAb,CAAjB;;AACA,MAAMC,UAAU,GAAID,MAAD,KAAa;EAAEL,IAAI,EAAEd,QAAR;EAAkBmB;AAAlB,CAAb,CAAnB;;AACA,MAAME,UAAU,GAAGlB,KAAK,KAAK;EAAEW,IAAI,EAAEb,SAAR;EAAmBE;AAAnB,CAAL,CAAxB;;AAEA,SAAQe,QAAR,EAAkBE,UAAlB,EAA8BC,UAA9B;AACA,eAAeV,YAAf"},"metadata":{},"sourceType":"module"}