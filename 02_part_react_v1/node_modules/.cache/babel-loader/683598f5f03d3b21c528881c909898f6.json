{"ast":null,"code":"import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/reducer-dialogs\";\nimport { connect } from 'react-redux'; //**** page Dialogs */\n\n/* let DialogsContainer = () => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        const state = store.getState().dialogsReducer;\n\n        const onSendMessageClick = () => {\n          store.dispatch(sendMessageCreator());\n        };\n        const messageAreaOnChange = (newMessageTmp) => {\n          const action = updateNewMessageBodyCreator(newMessageTmp);\n          store.dispatch(action);\n        };\n\n        return (\n          <Dialogs\n            updateNewMessageBodyCreator={messageAreaOnChange}\n            sendMessageCreator={onSendMessageClick}\n            dialogPages={state}\n          />\n        );\n      }}\n    </StoreContext.Consumer>\n  );\n}; */\n\nlet mapStateToProps = state => {\n  //console.log(state)\n  return {\n    dialogPages: state.dialogsReducer,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessageCreator: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBodyCreator: newMessageTmp => {\n      dispatch(updateNewMessageBodyCreator(newMessageTmp));\n    }\n  };\n};\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"names":["React","Dialogs","sendMessageCreator","updateNewMessageBodyCreator","connect","mapStateToProps","state","dialogPages","dialogsReducer","isAuth","auth","mapDispatchToProps","dispatch","newMessageTmp","DialogsContainer"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {\n  sendMessageCreator,\n  updateNewMessageBodyCreator,\n} from \"../../redux/reducer-dialogs\";\nimport { connect } from 'react-redux'\n\n//**** page Dialogs */\n\n/* let DialogsContainer = () => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        const state = store.getState().dialogsReducer;\n\n        const onSendMessageClick = () => {\n          store.dispatch(sendMessageCreator());\n        };\n        const messageAreaOnChange = (newMessageTmp) => {\n          const action = updateNewMessageBodyCreator(newMessageTmp);\n          store.dispatch(action);\n        };\n\n        return (\n          <Dialogs\n            updateNewMessageBodyCreator={messageAreaOnChange}\n            sendMessageCreator={onSendMessageClick}\n            dialogPages={state}\n          />\n        );\n      }}\n    </StoreContext.Consumer>\n  );\n}; */\n\nlet mapStateToProps = (state) => {\n  //console.log(state)\n  return {\n    dialogPages: state.dialogsReducer,\n    isAuth: state.auth.isAuth\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {  \n  return {\n    sendMessageCreator: () => {\n      dispatch(sendMessageCreator()) \n    },\n    updateNewMessageBodyCreator: (newMessageTmp) => {\n      dispatch(updateNewMessageBodyCreator(newMessageTmp))\n    }\n  }\n}\n\n\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,kBADF,EAEEC,2BAFF,QAGO,6BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;EAC/B;EACA,OAAO;IACLC,WAAW,EAAED,KAAK,CAACE,cADd;IAELC,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD;EAFd,CAAP;AAID,CAND;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;EACrC,OAAO;IACLV,kBAAkB,EAAE,MAAM;MACxBU,QAAQ,CAACV,kBAAkB,EAAnB,CAAR;IACD,CAHI;IAILC,2BAA2B,EAAGU,aAAD,IAAmB;MAC9CD,QAAQ,CAACT,2BAA2B,CAACU,aAAD,CAA5B,CAAR;IACD;EANI,CAAP;AAQD,CATD;;AAaA,MAAMC,gBAAgB,GAAGV,OAAO,CAACC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CV,OAA7C,CAAzB;AACA,eAAea,gBAAf"},"metadata":{},"sourceType":"module"}