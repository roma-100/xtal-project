{"ast":null,"code":"var _jsxFileName = \"/home/roman/wwwl/09_igor/web/01_react_v01/src/components/Xtest/Xtest2.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { slide as Menu } from 'react-burger-menu'; // make a new context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/React.createContext(); // create the provider\n\nconst MyProvider = props => {\n  _s();\n\n  const [menuOpenState, setMenuOpenState] = useState(false);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      isMenuOpen: menuOpenState,\n      toggleMenu: () => setMenuOpenState(!menuOpenState),\n      stateChangeHandler: newState => setMenuOpenState(newState.isOpen)\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}; // create a button that calls a context function to set a new open state when clicked\n\n\n_s(MyProvider, \"XElJTIsjca/S1FDQDIj8/TYpyGs=\");\n\n_c = MyProvider;\n\nconst Button = () => {\n  _s2();\n\n  const ctx = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: ctx.toggleMenu,\n    children: \"Toggle menu\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}; // create a navigation component that wraps the burger menu\n\n\n_s2(Button, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c2 = Button;\n\nconst Navigation = () => {\n  _s3();\n\n  const ctx = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    customBurgerIcon: false,\n    isOpen: ctx.isMenuOpen,\n    onStateChange: state => ctx.stateChangeHandler(state)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}; // default export here\n\n\n_s3(Navigation, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c3 = Navigation;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(MyProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MyProvider\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Navigation\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useContext","slide","Menu","MyContext","createContext","MyProvider","props","menuOpenState","setMenuOpenState","isMenuOpen","toggleMenu","stateChangeHandler","newState","isOpen","children","Button","ctx","Navigation","state","App"],"sources":["/home/roman/wwwl/09_igor/web/01_react_v01/src/components/Xtest/Xtest2.js"],"sourcesContent":["import React, { useState, useContext } from 'react'\nimport {slide as Menu} from 'react-burger-menu'\n\n// make a new context\nconst MyContext = React.createContext();\n\n// create the provider\nconst MyProvider = (props) => {\n  const [menuOpenState, setMenuOpenState] = useState(false)\n  \n  return (\n    <MyContext.Provider value={{\n      isMenuOpen: menuOpenState,\n      toggleMenu: () => setMenuOpenState(!menuOpenState),\n      stateChangeHandler: (newState) => setMenuOpenState(newState.isOpen)\n    }}>\n      {props.children}\n    </MyContext.Provider>\n  )\n}\n\n// create a button that calls a context function to set a new open state when clicked\nconst Button = () => {\n  const ctx = useContext(MyContext)\n  return (\n    <button onClick={ctx.toggleMenu}>Toggle menu</button>\n  )\n}\n\n// create a navigation component that wraps the burger menu\nconst Navigation = () => {\n  const ctx = useContext(MyContext)\n\n  return (\n    <Menu \n      customBurgerIcon={false}\n      isOpen={ctx.isMenuOpen}\n      onStateChange={(state) => ctx.stateChangeHandler(state)}\n    />\n  )\n}\n\n// default export here\nconst App = () => {\n  return (\n    <MyProvider>\n      <div>\n        <Button />\n        <Navigation />\n      </div>\n    </MyProvider>\n  )\n}\n\nexport default App;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAAQC,KAAK,IAAIC,IAAjB,QAA4B,mBAA5B,C,CAEA;;;AACA,MAAMC,SAAS,gBAAGL,KAAK,CAACM,aAAN,EAAlB,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;EAEA,oBACE,QAAC,SAAD,CAAW,QAAX;IAAoB,KAAK,EAAE;MACzBU,UAAU,EAAEF,aADa;MAEzBG,UAAU,EAAE,MAAMF,gBAAgB,CAAC,CAACD,aAAF,CAFT;MAGzBI,kBAAkB,EAAGC,QAAD,IAAcJ,gBAAgB,CAACI,QAAQ,CAACC,MAAV;IAHzB,CAA3B;IAAA,UAKGP,KAAK,CAACQ;EALT;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAZD,C,CAcA;;;GAdMT,U;;KAAAA,U;;AAeN,MAAMU,MAAM,GAAG,MAAM;EAAA;;EACnB,MAAMC,GAAG,GAAGhB,UAAU,CAACG,SAAD,CAAtB;EACA,oBACE;IAAQ,OAAO,EAAEa,GAAG,CAACN,UAArB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CALD,C,CAOA;;;IAPMK,M;;MAAAA,M;;AAQN,MAAME,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAMD,GAAG,GAAGhB,UAAU,CAACG,SAAD,CAAtB;EAEA,oBACE,QAAC,IAAD;IACE,gBAAgB,EAAE,KADpB;IAEE,MAAM,EAAEa,GAAG,CAACP,UAFd;IAGE,aAAa,EAAGS,KAAD,IAAWF,GAAG,CAACL,kBAAJ,CAAuBO,KAAvB;EAH5B;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAVD,C,CAYA;;;IAZMD,U;;MAAAA,U;;AAaN,MAAME,GAAG,GAAG,MAAM;EAChB,oBACE,QAAC,UAAD;IAAA,uBACE;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CATD;;MAAMA,G;AAWN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}