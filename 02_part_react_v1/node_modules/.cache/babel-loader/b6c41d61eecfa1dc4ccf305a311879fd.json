{"ast":null,"code":"var _jsxFileName = \"/home/roman/wwwl/30_react/react_kabzda2/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport { sendMessageCreator, updateNewMessageBodyCreator } from \"../../redux/reducer-dialogs\";\nimport { connect } from \"react-redux\";\nimport { Navigate // == redirect\n} from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet mapStateToProps = state => {\n  //console.log(state.auth.isAuth)\n  return {\n    dialogPages: state.dialogsReducer,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessageCreator: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBodyCreator: newMessageTmp => {\n      dispatch(updateNewMessageBodyCreator(newMessageTmp));\n    }\n  };\n}; //rom middleware *** HOC **** Hight object container\n\n\nconst AuthRedirectComponent = props => {\n  if (!props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n}; //const AuthRedirectComponent = withAuthRedirect(Dialogs)\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n//const AuthRedirectComponent = withAuthRedirect(DialogsContainer)\n//console.log (DialogsContainer)\n//export default DialogsContainer;\n\n/* const DialogsContainer = (props) => {\n  //const AuthRedirectComponent = withAuthRedirect(Dialogs2)\n  return <Dialogs2 />;\n} */\n\n\n_c = AuthRedirectComponent;\n\nclass DialogsContainer extends React.Component {}\n\nconst Dialogs2 = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Test Dialogs2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = Dialogs2;\nexport default DialogsContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthRedirectComponent\");\n$RefreshReg$(_c2, \"Dialogs2\");","map":{"version":3,"names":["React","Dialogs","sendMessageCreator","updateNewMessageBodyCreator","connect","Navigate","withAuthRedirect","mapStateToProps","state","dialogPages","dialogsReducer","isAuth","auth","mapDispatchToProps","dispatch","newMessageTmp","AuthRedirectComponent","props","DialogsContainer","Component","Dialogs2","color"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {\n  sendMessageCreator,\n  updateNewMessageBodyCreator,\n} from \"../../redux/reducer-dialogs\";\nimport { connect } from \"react-redux\";\nimport {\n  Navigate, // == redirect\n} from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\n\nlet mapStateToProps = (state) => {\n  //console.log(state.auth.isAuth)\n  return {\n    dialogPages: state.dialogsReducer,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessageCreator: () => {\n      dispatch(sendMessageCreator());\n    },\n    updateNewMessageBodyCreator: (newMessageTmp) => {\n      dispatch(updateNewMessageBodyCreator(newMessageTmp));\n    },\n  };\n};\n\n//rom middleware *** HOC **** Hight object container\nconst AuthRedirectComponent = (props) => {\n  if (!props.isAuth) {\n    return <Navigate to=\"/login\" replace={true} />;\n  }\n  return <Dialogs {...props} />;\n};\n\n//const AuthRedirectComponent = withAuthRedirect(Dialogs)\n\n  //const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n  //const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n//const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n  //const AuthRedirectComponent = withAuthRedirect(DialogsContainer)\n//console.log (DialogsContainer)\n\n//export default DialogsContainer;\n/* const DialogsContainer = (props) => {\n  //const AuthRedirectComponent = withAuthRedirect(Dialogs2)\n  return <Dialogs2 />;\n} */\n\nclass DialogsContainer extends React.Component {\n\n}\n\nconst Dialogs2 = (props) => {\n  return (\n  <>\n    <h1 style={{color: 'red'}}>Test Dialogs2</h1>\n  </>)\n\n}\n\nexport default DialogsContainer;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,kBADF,EAEEC,2BAFF,QAGO,6BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,CACY;AADZ,OAEO,kBAFP;AAGA,SAASC,gBAAT,QAAiC,4BAAjC;;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;EAC/B;EACA,OAAO;IACLC,WAAW,EAAED,KAAK,CAACE,cADd;IAELC,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWD;EAFd,CAAP;AAID,CAND;;AAQA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;EACrC,OAAO;IACLZ,kBAAkB,EAAE,MAAM;MACxBY,QAAQ,CAACZ,kBAAkB,EAAnB,CAAR;IACD,CAHI;IAILC,2BAA2B,EAAGY,aAAD,IAAmB;MAC9CD,QAAQ,CAACX,2BAA2B,CAACY,aAAD,CAA5B,CAAR;IACD;EANI,CAAP;AAQD,CATD,C,CAWA;;;AACA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;EACvC,IAAI,CAACA,KAAK,CAACN,MAAX,EAAmB;IACjB,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAC,QAAb;MAAsB,OAAO,EAAE;IAA/B;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBAAO,QAAC,OAAD,OAAaM;EAAb;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CALD,C,CAOA;AAEE;AACA;AACF;AACE;AACF;AAEA;;AACA;AACA;AACA;AACA;;;KAnBMD,qB;;AAqBN,MAAME,gBAAN,SAA+BlB,KAAK,CAACmB,SAArC,CAA+C;;AAI/C,MAAMC,QAAQ,GAAIH,KAAD,IAAW;EAC1B,oBACA;IAAA,uBACE;MAAI,KAAK,EAAE;QAACI,KAAK,EAAE;MAAR,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADA;AAKD,CAND;;MAAMD,Q;AAQN,eAAeF,gBAAf"},"metadata":{},"sourceType":"module"}