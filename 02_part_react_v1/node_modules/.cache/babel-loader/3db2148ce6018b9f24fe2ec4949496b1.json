{"ast":null,"code":"import { userAPI } from '../api/api';\nconst SET_USER_DATA = 'FOLLOSET_USER_DATAW';\nconst initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false //isFetching: false\n\n};\n/* ==== Actions ==== */\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === SET_USER_DATA) {\n    const stateCopy = { ...state,\n      ...action.data,\n      isAuth: true\n    }; //debugger\n\n    return stateCopy;\n  }\n\n  return state;\n};\n\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n}); //create action.type, action.userID\n\nexport const getAuthUserDataThunk = () => {\n  return dispatch => {\n    dispatch(setIsFollowingProgress(true, userId));\n    userAPI.follow(userId).then(data => {\n      if (data.resultCode == 0) {\n        //meaning result is successful\n        dispatch(follow(userId));\n      }\n\n      dispatch(setIsFollowingProgress(false, userId));\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"names":["userAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","stateCopy","data","setAuthUserData","getAuthUserDataThunk","dispatch","setIsFollowingProgress","follow","then","resultCode"],"sources":["/home/roman/wwwl/30_react/react_kabzda2/src/redux/reducer-auth.js"],"sourcesContent":["import {userAPI} from '../api/api'\n\nconst SET_USER_DATA = 'FOLLOSET_USER_DATAW'\n\nconst initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  //isFetching: false\n};\n\n/* ==== Actions ==== */\nconst authReducer = (state=initialState, action) => {\n    if (action.type === SET_USER_DATA) {\n        \n        const stateCopy = { \n            ...state, \n            ...action.data,\n            isAuth: true\n        }\n        //debugger\n        return stateCopy\n    } \n    \n    return state\n}\n\nexport const setAuthUserData = (userId, email, login) => ({ type: SET_USER_DATA, \n                                                        data: { userId, email, login}}); //create action.type, action.userID\nexport const getAuthUserDataThunk = () => {\n    return (dispatch) => {\n        dispatch(setIsFollowingProgress(true, userId))\n        userAPI.follow(userId)\n          .then((data) => {\n            if (data.resultCode == 0){ //meaning result is successful\n                dispatch(follow(userId))\n            }\n            dispatch(setIsFollowingProgress(false, userId))\n          }\n        )\n        }\n}\n\nexport default authReducer"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAEA,MAAMC,aAAa,GAAG,qBAAtB;AAEA,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,IADW;EAEnBC,KAAK,EAAE,IAFY;EAGnBC,KAAK,EAAE,IAHY;EAInBC,MAAM,EAAE,KAJW,CAKnB;;AALmB,CAArB;AAQA;;AACA,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EAChD,IAAIA,MAAM,CAACC,IAAP,KAAgBT,aAApB,EAAmC;IAE/B,MAAMU,SAAS,GAAG,EACd,GAAGH,KADW;MAEd,GAAGC,MAAM,CAACG,IAFI;MAGdN,MAAM,EAAE;IAHM,CAAlB,CAF+B,CAO/B;;IACA,OAAOK,SAAP;EACH;;EAED,OAAOH,KAAP;AACH,CAbD;;AAeA,OAAO,MAAMK,eAAe,GAAG,CAACV,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;EAAEK,IAAI,EAAET,aAAR;EACFW,IAAI,EAAE;IAAET,MAAF;IAAUC,KAAV;IAAiBC;EAAjB;AADJ,CAA3B,CAAxB,C,CACkF;;AACzF,OAAO,MAAMS,oBAAoB,GAAG,MAAM;EACtC,OAAQC,QAAD,IAAc;IACjBA,QAAQ,CAACC,sBAAsB,CAAC,IAAD,EAAOb,MAAP,CAAvB,CAAR;IACAH,OAAO,CAACiB,MAAR,CAAed,MAAf,EACGe,IADH,CACSN,IAAD,IAAU;MACd,IAAIA,IAAI,CAACO,UAAL,IAAmB,CAAvB,EAAyB;QAAE;QACvBJ,QAAQ,CAACE,MAAM,CAACd,MAAD,CAAP,CAAR;MACH;;MACDY,QAAQ,CAACC,sBAAsB,CAAC,KAAD,EAAQb,MAAR,CAAvB,CAAR;IACD,CANH;EAQC,CAVL;AAWH,CAZM;AAcP,eAAeI,WAAf"},"metadata":{},"sourceType":"module"}