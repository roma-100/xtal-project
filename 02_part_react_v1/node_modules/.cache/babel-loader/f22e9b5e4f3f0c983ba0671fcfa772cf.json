{"ast":null,"code":"import { profileAPI } from '../api/api';\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst initialState = {\n  posts: [{\n    id: 1,\n    message: \"This is my first post.\",\n    likesCount: 12\n  }, {\n    id: 1,\n    message: \"Second post. Hello everybody\",\n    likesCount: 11\n  }],\n  profile: null,\n  status: 'initial status'\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //debugger\n  //********* POST: ADD_POST **** ****/\n  if (action.type === ADD_POST) {\n    const stateCopy = { ...state,\n      newPostText: \"\",\n      posts: [...state.posts, {\n        id: 3,\n        message: action.newPost,\n        likesCount: 0\n      }]\n    };\n    return stateCopy;\n  } //*********POST: UPDATE_NEW_POST_TEXT ********/\n\n\n  if (action.type === SET_USER_PROFILE) {\n    //debugger\n    return { ...state,\n      profile: action.profile\n    };\n  }\n\n  if (action.type === SET_STATUS) {\n    //debugger\n    return { ...state,\n      status: action.status\n    };\n  }\n\n  return state;\n};\n\nexport const addPostActionCreator = newPost => ({\n  type: ADD_POST,\n  newPost\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getUserProfileThunk = userId => {\n  //console.log('hello userId: ' + userId)\n  return dispatch => {\n    profileAPI.getProfile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getStatusThunk = userId => {\n  //console.log('hello userId: ' + userId)\n  return dispatch => {\n    profileAPI.getStatus(userId).then(data => {\n      dispatch(setStatus(data));\n    });\n  };\n};\nexport const updateStatusThunk = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(data => {\n      data.resultCode === 0 && dispatch(setStatus(status));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","stateCopy","newPostText","newPost","addPostActionCreator","setUserProfile","setStatus","getUserProfileThunk","userId","dispatch","getProfile","then","data","getStatusThunk","getStatus","updateStatusThunk","updateStatus","resultCode"],"sources":["/home/roman/wwwl/09_igor/web/01_react_v01/src/redux/reducer-profile.js"],"sourcesContent":["import {profileAPI} from '../api/api'\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\nconst SET_STATUS = 'SET-STATUS'\n\nconst initialState = {\n  posts: [\n    { id: 1, message: \"This is my first post.\", likesCount: 12 },\n    { id: 1, message: \"Second post. Hello everybody\", likesCount: 11 },\n  ],\n  profile: null,\n  status: 'initial status'\n}\n\nconst profileReducer = (state=initialState, action) => {\n    //debugger\n    //********* POST: ADD_POST **** ****/\n    if (action.type === ADD_POST) {\n      const stateCopy = {\n        ...state,\n        newPostText: \"\",\n        posts: [\n          ...state.posts,\n          {\n            id: 3,\n            message: action.newPost,\n            likesCount: 0,\n          },\n        ],\n      };\n      return stateCopy;\n    }\n      //*********POST: UPDATE_NEW_POST_TEXT ********/\n      if (action.type === SET_USER_PROFILE) {\n        //debugger\n        return (\n          {...state, \n          profile: action.profile}\n        )\n      }\n      if (action.type === SET_STATUS) {\n        //debugger\n        return (\n          {...state, \n          status: action.status}\n        )\n      }      \n    return state\n}\n\n\nexport const addPostActionCreator = (newPost) => ({type: ADD_POST, newPost});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\n\nexport const getUserProfileThunk = (userId) => {\n  //console.log('hello userId: ' + userId)\n  return (dispatch) => {\n    profileAPI.getProfile(userId)\n    .then (data => {\n      dispatch(setUserProfile(data));\n    })\n  }\n}\n\nexport const getStatusThunk = (userId) => {\n  //console.log('hello userId: ' + userId)\n  return (dispatch) => {\n    profileAPI.getStatus(userId)\n    .then (data => {\n      dispatch(setStatus(data));\n    })\n  }\n}\n\nexport const updateStatusThunk = (status) => {\n  return (dispatch) => {\n    profileAPI.updateStatus(status)\n    .then (data => {\n      data.resultCode ===0 && dispatch(setStatus(status));\n    })\n  }\n}\n\nexport default profileReducer"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,YAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IAAEC,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,wBAAlB;IAA4CC,UAAU,EAAE;EAAxD,CADK,EAEL;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,8BAAlB;IAAkDC,UAAU,EAAE;EAA9D,CAFK,CADY;EAKnBC,OAAO,EAAE,IALU;EAMnBC,MAAM,EAAE;AANW,CAArB;;AASA,MAAMC,cAAc,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EACnD;EACA;EACA,IAAIA,MAAM,CAACC,IAAP,KAAgBb,QAApB,EAA8B;IAC5B,MAAMc,SAAS,GAAG,EAChB,GAAGH,KADa;MAEhBI,WAAW,EAAE,EAFG;MAGhBX,KAAK,EAAE,CACL,GAAGO,KAAK,CAACP,KADJ,EAEL;QACEC,EAAE,EAAE,CADN;QAEEC,OAAO,EAAEM,MAAM,CAACI,OAFlB;QAGET,UAAU,EAAE;MAHd,CAFK;IAHS,CAAlB;IAYA,OAAOO,SAAP;EACD,CAjBkD,CAkBjD;;;EACA,IAAIF,MAAM,CAACC,IAAP,KAAgBZ,gBAApB,EAAsC;IACpC;IACA,OACE,EAAC,GAAGU,KAAJ;MACAH,OAAO,EAAEI,MAAM,CAACJ;IADhB,CADF;EAID;;EACD,IAAII,MAAM,CAACC,IAAP,KAAgBX,UAApB,EAAgC;IAC9B;IACA,OACE,EAAC,GAAGS,KAAJ;MACAF,MAAM,EAAEG,MAAM,CAACH;IADf,CADF;EAID;;EACH,OAAOE,KAAP;AACH,CAlCD;;AAqCA,OAAO,MAAMM,oBAAoB,GAAID,OAAD,KAAc;EAACH,IAAI,EAAEb,QAAP;EAAiBgB;AAAjB,CAAd,CAA7B;AACP,OAAO,MAAME,cAAc,GAAIV,OAAD,KAAc;EAACK,IAAI,EAAEZ,gBAAP;EAAyBO;AAAzB,CAAd,CAAvB;AACP,OAAO,MAAMW,SAAS,GAAIV,MAAD,KAAa;EAACI,IAAI,EAAEX,UAAP;EAAmBO;AAAnB,CAAb,CAAlB;AAEP,OAAO,MAAMW,mBAAmB,GAAIC,MAAD,IAAY;EAC7C;EACA,OAAQC,QAAD,IAAc;IACnBvB,UAAU,CAACwB,UAAX,CAAsBF,MAAtB,EACCG,IADD,CACOC,IAAI,IAAI;MACbH,QAAQ,CAACJ,cAAc,CAACO,IAAD,CAAf,CAAR;IACD,CAHD;EAID,CALD;AAMD,CARM;AAUP,OAAO,MAAMC,cAAc,GAAIL,MAAD,IAAY;EACxC;EACA,OAAQC,QAAD,IAAc;IACnBvB,UAAU,CAAC4B,SAAX,CAAqBN,MAArB,EACCG,IADD,CACOC,IAAI,IAAI;MACbH,QAAQ,CAACH,SAAS,CAACM,IAAD,CAAV,CAAR;IACD,CAHD;EAID,CALD;AAMD,CARM;AAUP,OAAO,MAAMG,iBAAiB,GAAInB,MAAD,IAAY;EAC3C,OAAQa,QAAD,IAAc;IACnBvB,UAAU,CAAC8B,YAAX,CAAwBpB,MAAxB,EACCe,IADD,CACOC,IAAI,IAAI;MACbA,IAAI,CAACK,UAAL,KAAmB,CAAnB,IAAwBR,QAAQ,CAACH,SAAS,CAACV,MAAD,CAAV,CAAhC;IACD,CAHD;EAID,CALD;AAMD,CAPM;AASP,eAAeC,cAAf"},"metadata":{},"sourceType":"module"}