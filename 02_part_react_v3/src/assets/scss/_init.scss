
* {box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* === ++ Palette === */
$color-primary-0: #C8C800;	// Main Primary color */
$color-primary-1: #12120D;
$color-primary-2: #FCFC21;
$color-primary-3: #969600;
$color-primary-4: #525200;

$color-secondary-1-0: #C83900;	// Main Secondary color (1) */
$color-secondary-1-1: #120E0D;
$color-secondary-1-2: #FC5F21;
$color-secondary-1-3: #962B00;
$color-secondary-1-4: #521700;

$color-secondary-2-0: #084C81;	// Main Secondary color (2) */
$color-secondary-2-1: #080A0C;
$color-secondary-2-2: #1F69A2;
$color-secondary-2-3: #053960;
$color-secondary-2-4: #011E35;

$color-secondary-2-2-09: rgba(31, 105, 162, .9);
/* lll */


/* === .. Palette === */
$color-body: white;

body {
  font-family: 'Raleway-Regular';
  font-weight: 400;
  color: $color-primary-1;
}
h5 {
  font-family: Raleway-SemiBold;;
}
/* +++ media query +++ */
/* 
$min: 0, $max: 0
small max-width: 480px
medium (min-width: 481px) and (max-width: 1440px)
large min-width: 1441px
mobile max-width: 768px
desktop min-width: 769px

@include bp (small, medium){} -> @media only screen and (max-width: 480px) {}
@include bp (small){} -> @media only screen and (max-width: 480px) {}
@include bp (0px, 700px){} -> @media (min-width: 0px) and (max-width: 700px) {}
@include bp (700px){} -> @media (min-width: 700px) {}
*/
@mixin bp($min: 0, $max: 0) {
  $type: type-of($min);
 
  @if $type == string {
    @if $min == small { 
      @media only screen and (max-width: 480px) { @content; }
    }
 
    @else if $min == medium {
      @media only screen and (min-width: 481px) and (max-width: 1440px) { @content; }
    }
 
    @else if $min == large {
      @media only screen and (min-width: 1441px) { @content; }
    }
 
    @else if $min == mobile {
      @media only screen and (max-width: 768px) { @content; }
    }
 
    @else if $min == desktop {
      @media only screen and (min-width: 769px) { @content; }
    }
 
    // Otherwise pass a warning to the compiler as to the appropriate options
    @else {
      @warn "The breakpoint mixin supports the following attributes: mobile, desktop, small, medium, large";
    }
  }
  @else if $type == number {
    // Allow for custom parameters for min and max size
    $query: "all" !default;
    @if      $min != 0 and $max != 0 { $query: "(min-width: #{$min}) and (max-width: #{$max})"; } // set both min and max
    @else if $min != 0 and $max == 0 { $query: "(min-width: #{$min})"; } // set just min
    @else if $min == 0 and $max != 0 { $query: "(max-width: #{$max})"; } // set just max
    @media #{$query} { @content; }
  }
}

/* ... media query ... */